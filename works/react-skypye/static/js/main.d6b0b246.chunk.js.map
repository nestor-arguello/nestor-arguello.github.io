{"version":3,"sources":["static-data.js","reducers/user.js","reducers/index.js","reducers/contacts.js","reducers/activeUserId.js","constants/action-types.js","reducers/messages.js","reducers/typing.js","store/index.js","containers/User.js","actions/index.js","components/Sidebar.js","components/Empty.js","components/Header.js","components/Chats.js","containers/MessageInput.js","containers/ChatWindow.js","components/back-portfolio-btn/back-portfolio-btn.component.jsx","components/Main.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["numberOfUsers","shortid","require","txtgen","faker","_","users","Array","from","length","generateUser","contacts","mapKeys","getMessages","messagesPerUser","messages","forEach","user","numberOfMsgs","user_id","Object","objectSpread","v","i","number","text","sentence","is_user_msg","random","boolean","name","findName","email","internet","profile_pic","avatar","status","generate","combineReducers","state","arguments","undefined","activeUserId","action","type","payload","_action$payload","message","userId","allUserMsgs","keys","newMessage","newUserMsgs","defineProperty","typing","store","createStore","reducer","StyledUser","styled","div","withConfig","displayName","componentId","handleUserClick","_ref","event","dispatch","User","_ref2","objectWithoutProperties","react_default","a","createElement","onClick","className","src","alt","StyledSidebar","aside","Sidebar","userComponents","map","contact","containers_User","key","StyledEmpty","Empty","first_name","split","StyledHeader","header","HeaderName","h1","Header","StyledChat","span","StyledChats","Chat","Chats","chatsRef","useRef","useEffect","current","scrollTop","scrollHeight","chatComponents","msg","Chats_Chat","ref","StyledMessageInput","form","MessageInput","value","getState","messageInputRef","focus","onSubmit","preventDefault","onChange","target","placeholder","StyledChatWindow","ChatWindow","activeUser","activeMsgs","components_Header","components_Chats","containers_MessageInput","BackPortfolioBtn","class","href","title","StyledMain","main","Main","renderMainContent","containers_ChatWindow","components_Empty","back_portfolio_btn_component","StyledApp","App","esm_extends","_store$getState","contactsArray","id","components_Sidebar","components_Main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","GlobalStyle","createGlobalStyle","_templateObject","render","ReactDOM","react","containers_App","document","getElementById","subscribe","URL","process","origin","addEventListener","concat","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d6b0b246.chunk.js","sourcesContent":["const shortid = require(\"shortid\"); // shortid.generate() returns a unique \"short\" id\nconst txtgen = require(\"txtgen\"); // txtgen.sentence() returns random \"readable\" sentences\nconst faker = require(\"faker\"); // faker is used for generating random fake data.\nconst _ = require(\"lodash\"); // lodash is a utility lib for Javascript\n\nconst users = generateUsers(10);\nexport const contacts = _.mapKeys(users, \"user_id\");\nexport const getMessages = messagesPerUser => {\n  let messages = {};\n  _.forEach(users, user => {\n    messages[user.user_id] = {\n      ..._.mapKeys(generateMsgs(messagesPerUser), \"number\")\n    };\n  });\n  return messages;\n};\n\n// just an example of how the state object is structured\nexport const state = {\n  user: generateUser(),\n  messages: getMessages(10),\n  typing: \"\",\n  contacts,\n  activeUserId: null\n};\n\n/**\n * @returns {Object} - a new user object\n */\nexport function generateUser() {\n  return {\n    name: faker.name.findName(),\n    email: faker.internet.email(),\n    profile_pic: faker.internet.avatar(),\n    status: txtgen.sentence(),\n    user_id: shortid.generate()\n  };\n}\n/**\n * @returns {Object} - a new message object\n */\nfunction generateMsg(number) {\n  return {\n    number,\n    text: txtgen.sentence(),\n    is_user_msg: faker.random.boolean()\n  };\n}\n/**\n *\n * @param {Number} numberOfUsers - the number of users to be generated\n * @param {Function} generateUser - function that generates a single user\n * @returns {Array} - an array of user objects with length n = numberOfUsers\n */\nfunction generateUsers(numberOfUsers) {\n  return Array.from({ length: numberOfUsers }, () => generateUser());\n}\n\nfunction generateMsgs(numberOfMsgs) {\n  return Array.from({ length: numberOfMsgs }, (v, i) => generateMsg(i));\n}","import { generateUser } from '../static-data'\n\nexport default (state = generateUser(), action) => {\n  return state\n}","import { combineReducers } from 'redux'\nimport user from './user'\nimport contacts from './contacts'\nimport activeUserId from './activeUserId'\nimport messages from './messages'\nimport typing from './typing'\n\nexport default combineReducers({\n  user,\n  contacts,\n  activeUserId,\n  messages,\n  typing\n})\n","import { contacts } from '../static-data'\n\nexport default (state = contacts, action) => {\n  return state\n}\n","import { SET_ACTIVE_USER_ID } from '../constants/action-types'\n\nexport default (state = null, action) => {\n  switch (action.type) {\n    case SET_ACTIVE_USER_ID:\n      return action.payload\n  \n    default:\n      return state\n  }\n}","export const SET_ACTIVE_USER_ID = 'SET_ACTIVE_USER_ID'\nexport const SET_TYPING_VALUE = 'SET_TYPING_VALUE'\nexport const SEND_MESSAGE = 'SEND_MESSAGE'","import { getMessages } from '../static-data'\nimport { SEND_MESSAGE } from '../constants/action-types'\n\nexport default (state = getMessages(10), action) => {\n  switch (action.type) {\n    case SEND_MESSAGE:\n      const { message, userId } = action.payload\n      const allUserMsgs = state[userId]\n      const number = Object.keys(allUserMsgs).length\n      const newMessage = {\n        number,\n        text: message,\n        is_user_msg: true\n      }\n      const newUserMsgs = { ...allUserMsgs, [number]: newMessage }\n      const newMessagesState = { ...state, [userId]: newUserMsgs }\n\n      return newMessagesState\n\n    default:\n      return state\n  }\n}\n","import { SET_TYPING_VALUE, SEND_MESSAGE } from '../constants/action-types'\n\nexport default (state = '', action) => {\n  switch (action.type) {\n    case SET_TYPING_VALUE:\n      return action.payload\n    \n    case SEND_MESSAGE:\n      return ''\n    \n    default:\n      return state\n  }\n}\n","import { createStore } from 'redux'\nimport reducer from '../reducers'\n\nconst store = createStore(reducer)\n\nexport default store\n","import React from 'react'\nimport styled from 'styled-components'\nimport store from '../store'\nimport { setActiveUserId } from '../actions'\n\nconst StyledUser = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 1rem;\n  &:hover {\n    background: rgba(0, 0, 0, 0.2);\n    cursor: pointer;\n  }\n\n  & .profile-pic {\n    width: 50px;\n    border-radius: 50%;\n  }\n\n  & .details {\n    display: none;\n\n    @media (min-width: 576px) {\n      display: block;\n      padding: 0 0 0 1rem;\n    }\n  }\n\n  & .name {\n    margin: 0;\n    color: rgba(255, 255, 255, 0.8);\n    font-size: 1rem;\n    font-weight: 600;\n  }\n`\nconst handleUserClick = ({ user_id }) => event => {\n  store.dispatch(setActiveUserId(user_id))\n}\n\nconst User = ({ user, ...props }) => {\n  const { name, profile_pic, status } = user\n  \n  return (\n    <StyledUser onClick={handleUserClick(user)}>\n      <img className=\"profile-pic\" src={profile_pic} alt={name} />\n      <div className=\"details\">\n        <p className=\"name\">{name}</p>\n        <p className=\"status\">{status}</p>\n      </div>\n    </StyledUser>\n  )\n}\n\nexport default User\n","import {\n  SET_ACTIVE_USER_ID,\n  SET_TYPING_VALUE,\n  SEND_MESSAGE\n} from '../constants/action-types'\n\nexport const setActiveUserId = id => ({\n  type: SET_ACTIVE_USER_ID,\n  payload: id\n})\n\nexport const setTypingValue = value => ({\n  type: SET_TYPING_VALUE,\n  payload: value\n})\n\nexport const sendMessage = (message, userId) => ({\n  type: SEND_MESSAGE,\n  payload: { message, userId }\n})\n","import React from 'react'\nimport styled from 'styled-components'\nimport User from '../containers/User'\n\nconst StyledSidebar = styled.aside`\n  width: 80px;\n  background-color: rgba(32, 32, 35, 1);\n  height: 100%;\n  border-right: 1px solid rgba(189, 189, 192, 0.1);\n  transition: width 0.3s;\n  overflow-y: scroll;\n\n  @media (min-width: 576px) {\n    width: 320px;\n  }\n`\n\nconst Sidebar = ({ contacts, ...props }) => {\n  const userComponents = contacts.map(contact => {\n    return <User key={contact.user_id} user={contact} />\n  })\n  return (\n    <StyledSidebar>\n      {userComponents}\n    </StyledSidebar>\n  )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledEmpty = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  & .name {\n    color: #fff;\n  }\n  & .status,\n  & .info {\n    padding: 1rem;\n  }\n  & .status {\n    color: rgba(255, 255, 255, 0.9);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.7);\n  }\n  & .img {\n    border-radius: 50%;\n    margin: 2rem 0;\n  }\n  & .btn {\n    padding: 1rem;\n    margin: 1rem 0;\n    font-weight: bold;\n    font-size: 1.2rem;\n    border-radius: 30px;\n    outline: 0;\n    &:hover {\n      background: rgba(255, 255, 255, 0.7);\n      cursor: pointer;\n    }\n  }\n`\n\nconst Empty = ({ user }) => {\n  const { name, profile_pic, status } = user\n  const first_name = name.split(' ')[0]\n  return (\n    <StyledEmpty>\n      <h1 className=\"name\">Welcome, {first_name} </h1>\n      <img src={profile_pic} alt={name} className=\"img\" />\n      <p className=\"status\">\n        <b>Status:</b> {status}\n      </p>\n      <button className=\"btn\">Start a conversation</button>\n      <p className=\"info\">\n        Search for someone to start chatting with or go to Contacts to see who\n        is available\n      </p>\n    </StyledEmpty>\n  )\n}\nexport default Empty\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledHeader = styled.header`\n  padding: 1rem 2rem;\n  border-bottom: 1px solid rgba(189, 189, 192, 0.2);\n`\nconst HeaderName = styled.h1`\n  color: #fff;\n`\n\nconst Header = ({ user }) => {\n  const { name, status } = user\n  return (\n    <StyledHeader>\n      <HeaderName>{name}</HeaderName>\n      <p>{status}</p>\n    </StyledHeader>\n  )\n}\n\nexport default Header\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\n\nconst StyledChat = styled.span`\n  margin: 1rem 0;\n  color: #fff;\n  padding: 1rem;\n  background: linear-gradient(90deg, #1986d8, #7b9cc2);\n  max-width: 90%;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n\n  &.is-usr-msg {\n    margin-left: auto;\n    background: #2b2c33;\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    border-top-left-radius: 10px;\n    border-bottom-left-radius: 10px;\n  }\n\n  @media (min-width: 576px) {\n    max-width: 60%;\n  }\n`\n\nconst StyledChats = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  flex: 1 1 0;\n  width: 85%;\n  margin: 0 auto;\n  overflow-y: scroll;\n`\n\nconst Chat = ({ message }) => {\n  const { text, is_user_msg } = message\n  return (\n    <StyledChat className={is_user_msg ? '' : 'is-usr-msg'}>{text}</StyledChat>\n  )\n}\n\nconst Chats = ({ messages }) => {\n  const chatsRef = useRef()\n  const scrollToBottom = () => {\n    chatsRef.current.scrollTop = chatsRef.current.scrollHeight\n  }\n  \n  useEffect(scrollToBottom)\n\n  const messagesArray = Object.keys(messages).map(number => messages[number])\n  const chatComponents = messagesArray.map(msg => (\n    <Chat message={msg} key={msg.number} />\n  ))\n\n  return <StyledChats ref={chatsRef}>{chatComponents}</StyledChats>\n}\n\nexport default Chats\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport store from '../store'\nimport { setTypingValue, sendMessage } from '../actions'\n\nconst StyledMessageInput = styled.form`\n  width: 80%;\n  margin: 1rem auto;\n\n  & .Message__input {\n    width: 100%;\n    padding: 1rem;\n    background: rgba(0, 0, 0, 0.8);\n    color: #fff;\n    border: 0;\n    border-radius: 10px;\n    font-size: 1rem;\n    outline: 0;\n  }\n`\n\nconst MessageInput = ({ value }) => {\n  const state = store.getState()\n\n  const handleChange = event => {\n    store.dispatch(setTypingValue(event.target.value))\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    const { typing, activeUserId } = state\n\n    store.dispatch(sendMessage(typing, activeUserId))\n  }\n\n  const messageInputRef = useRef()\n  const focusMessageInput = () => {\n    messageInputRef.current.focus()\n  }\n\n  useEffect(focusMessageInput)  \n\n  return (\n    <StyledMessageInput onSubmit={handleSubmit}>\n      <input\n        className=\"Message__input\"\n        onChange={handleChange}\n        value={value}\n        ref={messageInputRef}\n        placeholder=\"write a message\"\n      />\n    </StyledMessageInput>\n  )\n}\n\nexport default MessageInput\n","import React from 'react'\nimport store from '../store'\nimport Header from '../components/Header'\nimport Chats from '../components/Chats'\nimport MessageInput from '../containers/MessageInput'\nimport styled from 'styled-components'\n\nconst StyledChatWindow = styled.div`\n  display: flex;\n  flex-flow: column;\n  height: 100vh;\n`\n\nconst ChatWindow = ({ activeUserId }) => {\n  const state = store.getState()\n  const activeUser = state.contacts[activeUserId]\n  const activeMsgs = state.messages[activeUserId]\n  const { typing } = state\n\n  return (\n    <StyledChatWindow>\n      <Header user={activeUser} />\n      <Chats messages={activeMsgs} />\n      <MessageInput value={typing} />\n    </StyledChatWindow>\n  )\n}\n\nexport default ChatWindow\n","import React from 'react';\n\nimport './back-portfolio-btn.styles.css';\n\nconst BackPortfolioBtn = () => (\n  <div class=\"back-home-btn\">\n    <a\n      href=\"https://nestor-arguello.github.io/portfolio\"\n      target=\"_self\"\n      title=\"Back Home\"\n    >\n      &#8617;\n    </a>\n  </div>\n);\n\nexport default BackPortfolioBtn;\n","import React from 'react'\nimport styled from 'styled-components'\nimport Empty from './Empty'\nimport ChatWindow from '../containers/ChatWindow'\nimport BackPortfolioBtn from '../components/back-portfolio-btn/back-portfolio-btn.component';\n\nconst StyledMain = styled.main`\n  flex: 1;\n  background-color: rgba(25, 25, 27, 1);\n  height: 100%;\n  position: relative;\n`\n\nconst Main = ({ user, activeUserId, ...props }) => {\n  const renderMainContent = \n    activeUserId ? (\n      <ChatWindow activeUserId={activeUserId} />\n    ) : (\n      <Empty user={user} activeUserId={activeUserId} />\n    )\n  return <StyledMain><BackPortfolioBtn />{renderMainContent}</StyledMain>\n}\n\nexport default Main\n","import React from 'react'\nimport styled from 'styled-components'\nimport Sidebar from '../components/Sidebar'\nimport Main from '../components/Main'\nimport store from '../store'\n\nconst StyledApp = styled.div`\n  height: 100%;\n  display: flex;\n  color: rgba(189, 189, 192, 1);\n`\n\nconst App = ({ ...props }) => {\n  const { contacts, user, activeUserId } = store.getState()\n  const contactsArray = Object.keys(contacts).map(id => contacts[id])\n\n  return (\n    <StyledApp>\n      <Sidebar contacts={contactsArray} />\n      <Main user={user} activeUserId={activeUserId} />\n    </StyledApp>\n  )\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Fragment } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './containers/App'\nimport { createGlobalStyle } from 'styled-components'\nimport store from './store'\n\nimport registerServiceWorker from './registerServiceWorker'\n\nconst GlobalStyle = createGlobalStyle`\n  @import url(\"https://fonts.googleapis.com/css?family=Nunito+Sans:400,700\");\n  \n  body {\n    margin: 0;\n    padding: 0;\n    font-family: \"Nunito Sans\", sans-serif;\n    font-weight: 400;\n\n    #root {\n      height: 100vh;\n    }\n  }\n`\nfunction fancyLog() {\n  console.log('%c Rendered with 👉 👉 👇 ', 'background: purple; color: #FFF')\n  console.log(store.getState())\n}\n\nconst render = () => {\n  fancyLog()\n  return ReactDOM.render(\n    <Fragment>\n      <GlobalStyle />\n      <App />\n    </Fragment>,\n    document.getElementById('root')\n  )\n}\n\nrender()\n\nstore.subscribe(render)\n\nregisterServiceWorker()\n"],"sourceRoot":""}